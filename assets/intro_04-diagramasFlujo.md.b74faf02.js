import{_ as t,c as a,o as e,a as r}from"./app.ea73af9e.js";const o="/programming-class-6th/assets/04-flowChart.1d289a52.png",s="/programming-class-6th/assets/04-Flowchart_Terminal.f4f44693.svg",i="/programming-class-6th/assets/04-Flowchart_Condition.b5bbe8cd.svg",n="/programming-class-6th/assets/04-Flowchart_Process.c41659fe.svg",c="/programming-class-6th/assets/04-Flowchart_Data.aa0a7f32.svg",l="/programming-class-6th/assets/04-Flowchart_Document.e244b57f.svg",d="/programming-class-6th/assets/04-Flowchart_Predefined_Process.ca205e03.svg",g="/programming-class-6th/assets/04-Flowchart_Connector.d183965a.svg",j=JSON.parse('{"title":"Diagramas de flujo","description":"","frontmatter":{},"headers":[],"relativePath":"intro/04-diagramasFlujo.md"}'),m={name:"intro/04-diagramasFlujo.md"},u=r('<h1 id="diagramas-de-flujo" tabindex="-1">Diagramas de flujo <a class="header-anchor" href="#diagramas-de-flujo" aria-hidden="true">#</a></h1><p>Los diagramas de flujo son una manera gr\xE1fica de representar una secuencia de procedimientos, algoritmos o pasos.</p><p style="text-align:center;"><img src="'+o+'" alt="FlowChar" style="background-color:white;height:50%;width:50%;"></p><p>Esto es un ejemplo para revisar si una l\xE1mpara est\xE1 funcionando, pero quiz\xE1s no se entienda que hace cada uno de esos bloques, as\xED que vamos a explicarlos.</p><table><thead><tr><th style="text-align:center;">S\xEDmbolo</th><th style="text-align:center;">Nombre</th><th>Descripci\xF3n</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="'+s+'" alt="FlowChar start/terminal symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Inicio <br> Fin</td><td>Indica cuando un programa inicia o termina.</td></tr><tr><td style="text-align:center;"><img src="'+i+'" alt="FlowChar condition symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Condici\xF3n</td><td>Se utiliza para indicar cuando debe tomarse y se bifurca el programa, es decir, que toma un camino u otro</td></tr><tr><td style="text-align:center;"><img src="'+n+'" alt="FlowChar process symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Proceso</td><td>Se utiliza para indicar que se debe realizar alguna acci\xF3n</td></tr><tr><td style="text-align:center;"><img src="'+c+'" alt="FlowChar process symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Datos</td><td>Se utiliza para indicar que se van a introducir o usar datos. Se usa tambi\xE9n como un input de usuario.</td></tr><tr><td style="text-align:center;"><img src="'+l+'" alt="FlowChar document symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Salid o escritura de informaci\xF3n</td><td>Un nodo que se utiliza cuando el proceso debe guardar la informaci\xF3n o mostrar alg\xFAn dato (aunque el bloque de process bien podr\xEDa usarse para estos casos)</td></tr><tr><td style="text-align:center;"><img src="'+d+'" alt="FlowChar predefined process symbol" style="background-color:;height:100%;width:100%;"></td><td style="text-align:center;">Sub proceso</td><td>Se utiliza para ejecutar un proceso que no forma parte del diagrama principal.</td></tr><tr><td style="text-align:center;"><img src="'+g+'" alt="FlowChar connector symbol" style="background-color:;height:60%;width:60%;"></td><td style="text-align:center;">Conector</td><td>Se utiliza para conectar el flujo de un programa a otras partes de flujo, por ejemplo, si no queda m\xE1s espacio para mostrar en la hoja en vez de trazar una linea de nuevo inicio de la hoja, se coloca un conector que significa un salto</td></tr></tbody></table>',5),h=[u];function p(_,b,y,f,w,x){return e(),a("div",null,h)}const C=t(m,[["render",p]]);export{j as __pageData,C as default};
