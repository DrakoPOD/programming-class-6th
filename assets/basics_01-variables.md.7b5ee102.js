import{_ as s,c as a,o as n,a as e}from"./app.23ddbb1a.js";const C=JSON.parse('{"title":"Variables","description":"","frontmatter":{},"headers":[{"level":2,"title":"Tipos de datos","slug":"tipos-de-datos","link":"#tipos-de-datos","children":[]},{"level":2,"title":"Operaciones con variables y tipos datos","slug":"operaciones-con-variables-y-tipos-datos","link":"#operaciones-con-variables-y-tipos-datos","children":[{"level":3,"title":"Operaciones num\xE9ricas","slug":"operaciones-numericas","link":"#operaciones-numericas","children":[]},{"level":3,"title":"Operaciones con texto","slug":"operaciones-con-texto","link":"#operaciones-con-texto","children":[]}]},{"level":2,"title":"Reutilizaci\xF3n de variables","slug":"reutilizacion-de-variables","link":"#reutilizacion-de-variables","children":[]},{"level":2,"title":"Diferencia entre null y undefined","slug":"diferencia-entre-null-y-undefined","link":"#diferencia-entre-null-y-undefined","children":[]},{"level":2,"title":"Operaciones matem\xE1ticas entre tipos string y number","slug":"operaciones-matematicas-entre-tipos-string-y-number","link":"#operaciones-matematicas-entre-tipos-string-y-number","children":[]},{"level":2,"title":"Verificaci\xF3n de tipos","slug":"verificacion-de-tipos","link":"#verificacion-de-tipos","children":[]},{"level":2,"title":"TypeScript","slug":"typescript","link":"#typescript","children":[]}],"relativePath":"basics/01-variables.md"}'),l={name:"basics/01-variables.md"},o=e(`<h1 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h1><p>Una variable es un espacio en la memoria para almacenar datos durante la ejecuci\xF3n de un programa. Se le asigna un nombre simb\xF3lico a dicho espacio. Visto de otra forma, una variable es como una caja para guardar cosas.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> miVariable</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>Las variables pueden cambiar su valor durante el transcurso del programa, pero se borran al finalizar la ejecuci\xF3n del programa. Aunque tambi\xE9n existen las variables constantes cuyo valor nunca cambia durante la ejecuci\xF3n, pero aun as\xED se pierden al finalizar.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> miVariable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">miVariable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>En este ejemplo hemos asignado el valor de <code>6</code> a la variable, luego le hemos cambiado a un 0. Sin embargo, durante la ejecuci\xF3n de un programa, no podemos ver las variables sin un <strong>depurador (debugger)</strong>, para poder ver su valor haremos uso del m\xE9todo <code>console.log</code> que nos muestra informaci\xF3n por la consola.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> miVariable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> Numero </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(miVariable)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// 6</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(numero)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>El \xFAltimo nos di\xF3 indefinido \xBFPor qu\xE9? si le hab\xEDas asignado un valor, pues eso es porque declaramos <code>Numero</code>, y llamamos con <code>numero</code>, la <code>N</code> la pusimos may\xFAscula cuando declaramos la variable y luego la llamamos con una min\xFAscula, eso es porque JavaScript (y muchos otros lenguajes) es sensible a may\xFAsculas y min\xFAsculas.</p><h2 id="tipos-de-datos" tabindex="-1">Tipos de datos <a class="header-anchor" href="#tipos-de-datos" aria-hidden="true">#</a></h2><p>Las variables pueden ser de varios tipos, dependiendo del tipo de informaci\xF3n que almacenen, a estos datos se les denomina <strong>tipos primitivos</strong>, son los tipos de datos fundamentales de cada lenguaje y que nos permite construir tipos de datos m\xE1s complejos:</p><ul><li><strong>N\xFAmero (<code>number</code>):</strong> como su nombre indica, almacena n\xFAmeros, ejemplos <code>9</code>, <code>0.43</code>, <code>1</code>. En javascript las variables num\xE9ricas pueden ser enteras o de punto flotante (decimales), no hace distinci\xF3n. <ul><li>En algunos lenguajes, las variables num\xE9ricas pueden solamente aceptar caracteres enteros (<code>int</code>), por ejemplo <code>1</code>, <code>34</code>, <code>543</code>, se debe usar otro tipo de variable si se quiere usar n\xFAmeros con punto flotante, por ejemplo <code>0.2</code>, <code>1.43</code>.</li></ul></li><li><strong>Texto (<code>string</code>):</strong> almacena cadenas de caracteres. En muchos lenguajes se suelen expresar con comillas dobles <code>&quot;&quot;</code>, en javascript tambi\xE9n es v\xE1lido usar comillas simples <code>&#39;&#39;</code>. <code>&#39;Hola Mundo&#39;</code>, <code>&quot;Pedro&quot;</code>, <code>&quot;124&quot;</code>. <ul><li>En programaci\xF3n se hace una diferencia con <code>string</code> y <code>char</code>, ya que algunos lenguajes tienen el tipo de datos <code>char</code>, en el cual solo almacenan un car\xE1cter, <code>&#39;a&#39;</code>, <code>&#39;1&#39;</code>, <code>&#39;e&#39;</code>.</li></ul></li><li><strong>L\xF3gico (<code>Boolean</code>):</strong> esta variable solo puede almacenar el tipo l\xF3gico, es decir, <code>1</code> o <code>0</code>. Otra forma de expresar es como <code>true</code> y <code>false</code>.</li><li><strong>Nulo (<code>null</code>):</strong> representa la ausencia intencional de cualquier valor de objeto.</li><li><strong>Indefinido (<code>undefined</code>):</strong> si no se le asigna un valor a una variable al ser creada, tendr\xE1 el valor <code>undefined</code>.</li></ul><p>JavaScript dispone de otro tipo de dato, es un typo de dato mucho m\xE1s complejo, puede estar compuesto por datos primitivos y hasta funciones, son los <strong>objetos</strong>.</p><ul><li><strong>Objeto (<code>object</code>):</strong> es un typo de dato que almacena otros datos de la forma de <code>clave : valor</code> (<code>key : value</code>), se desglosar\xE1 m\xE1s adelante este tipo de datos.</li></ul><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> miObjeto </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Pedro</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">edad</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">admitido</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>Arreglo (<code>Array</code>):</strong> los arreglos en JavaScript tambi\xE9n son objetos, pero no son objetos en otros lenguajes, dado que estos almacenan los datos en forma de lista, donde cada uno de ellos posee una posici\xF3n num\xE9rica en la lista, se hablar\xE1 m\xE1s adelante de este tipo de datos.</li></ul><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> miArreglo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>Para poder visualizar el tipo de dato de una variable usamos el operador <code>typeof</code> que nos devuelve el tipo de dato. Debemos usar el <code>console.log</code> para ver los valores, pero no los ahorraremos para un ejemplo m\xE1s limpio.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;">// number</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;">// number</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// string</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">342</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// string</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;">// boolean</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;">// object</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> []           </span><span style="color:#676E95;">// object</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;">// object por cuestiones de legado</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="operaciones-con-variables-y-tipos-datos" tabindex="-1">Operaciones con variables y tipos datos <a class="header-anchor" href="#operaciones-con-variables-y-tipos-datos" aria-hidden="true">#</a></h2><h3 id="operaciones-numericas" tabindex="-1">Operaciones num\xE9ricas <a class="header-anchor" href="#operaciones-numericas" aria-hidden="true">#</a></h3><p>Las operaciones con n\xFAmeros son muy parecidas a las matem\xE1ticas normales, he aqu\xED un ejemplo con las operaciones m\xE1s b\xE1sicas de matem\xE1ticas.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Suma</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 9</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Resta</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Multiplicaci\xF3n</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Exponente</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// 625</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Divisi\xF3n</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 1.25</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Modulo, residuo de una divisi\xF3n</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> numB )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Incremento, incrementa en uno</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numA</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// 6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Decremento, reduce en uno</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( numB</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="expresiones-matematicas" tabindex="-1">Expresiones matem\xE1ticas <a class="header-anchor" href="#expresiones-matematicas" aria-hidden="true">#</a></h4><p>Si queremos hacer la siguiente operaci\xF3n: <code>sumar 100 + 50 y luego multiplicarlo por 2, despu\xE9s sumar 50 m\xE1s</code>. El resultado de eso ser\xEDa 350.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> resultado </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(resultado)      </span><span style="color:#676E95;">// 250</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>El resultado no es el esperado, no se tomaron en cuenta el orden de las operaciones, las computadoras tambi\xE9n siguen dicho orden. Entonces deber\xEDamos corregir la ecuaci\xF3n haciendo uso de par\xE9ntesis.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> resultado </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(resultado)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;">// 350</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="el-valor-nan" tabindex="-1">El valor <code>NaN</code> <a class="header-anchor" href="#el-valor-nan" aria-hidden="true">#</a></h4><p><code>NaN</code> significa <strong>Not-A-Number</strong> (No es un n\xFAmero) este valor se utiliza cuando se intent\xF3 realizar una operaci\xF3n num\xE9rica, pero el resultado no es un n\xFAmero, por ejemplo cuando convertimos de texto a n\xFAmero.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// NaN</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="operaciones-con-texto" tabindex="-1">Operaciones con texto <a class="header-anchor" href="#operaciones-con-texto" aria-hidden="true">#</a></h3><p>Las variables de tipo <code>string</code> son inmutables en JavaScript, esto quiere decir que no se puede modificar una vez creada, cuando modificamos una variable tipo <code>string</code> debemos reasignar su valor a una nueva variable o reutilizar la misma.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> text1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hola</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> text2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mundo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> text3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> text1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> text2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(text3)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;">// HolaMundo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>El nombre qu recibe estas operaciones en programaci\xF3n es <strong>concatenaci\xF3n</strong> Podemos usar cadenas directamente sin la necesidad de una variable, vamos a a\xF1adir un espacio a la cadena de texto anterior.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> text3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> text1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> text2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(text3)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;">// Hola Mundo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="reutilizacion-de-variables" tabindex="-1">Reutilizaci\xF3n de variables <a class="header-anchor" href="#reutilizacion-de-variables" aria-hidden="true">#</a></h2><p>No es necesario crear una variable cada vez que vayamos a realizar una operaci\xF3n, esto podr\xEDa aumentar el consumo de memoria de nuestra aplicaci\xF3n/programa y volverlo m\xE1s lento. Tomemos el siguiente ejemplo.</p><blockquote><p>Tomar un n\xFAmero, sumarle 4, multiplicarlo por 3, restarle 2, sumarle 5, multiplicarlo 2, dividirlo entre 3.</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num4 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num3 </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num5 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num4 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num6 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num5 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num7 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num6 </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num7)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;">// 18</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Son 7 variables en total, y muchas de ellas no se van a volver a utilizar, pero todo esto se puede hace con una sola variable.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;">// 18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Aunque podr\xEDa simplificarse a\xFAn m\xE1s</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ((num </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Es posible asignar una variable a ella misma, internamente el programa copia la variable en una nueva ubicaci\xF3n para realizar la operaci\xF3n, cuando finaliza la operaci\xF3n guarda el resultado de dicha operaci\xF3n en la variable que se eligi\xF3, en este caso, ella misma.</p><h2 id="diferencia-entre-null-y-undefined" tabindex="-1">Diferencia entre <code>null</code> y <code>undefined</code> <a class="header-anchor" href="#diferencia-entre-null-y-undefined" aria-hidden="true">#</a></h2><p>Hay que tener cuidado al realizar comparaciones entre <code>null</code> o <code>undefined</code>. Aunque <code>null</code> es un dato primitivo, internamente es considerado como <code>object</code> por el interprete de JavaScript, esto es por motivos de compatibilidad, dado que cuando se creo era un objeto, pero luego se consider\xF3 como un dato primitivo.</p><p>Como sabr\xE1n javascript se usa en <strong>TODOS</strong> los navegadores del mundo, estos se actualizan todo el tiempo para incorporar las nuevas funciones de JavaScript. Pero algunas personas no lo actualizan ya sea porque no saben como hacerlo, o porque su dispositivo no soporta las nuevas versiones. As\xED que para mantener una consistencia en toda la web, lo mantienen como <code>object</code>.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;">// &quot;object&quot; (no &quot;null&quot; por razones de compatibilidad)</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;">// &quot;undefined&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// false</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">!null</span><span style="color:#A6ACCD;">                </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// isNaN verifica si el resultado de la operaci\xF3n es NaN</span></span>
<span class="line"><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)      </span><span style="color:#676E95;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="operaciones-matematicas-entre-tipos-string-y-number" tabindex="-1">Operaciones matem\xE1ticas entre tipos <code>string</code> y <code>number</code> <a class="header-anchor" href="#operaciones-matematicas-entre-tipos-string-y-number" aria-hidden="true">#</a></h2><p>Miremos el siguiente ejemplo entre una suma de <code>5</code> y <code>&quot;5&quot;</code>, se espera que la respuesta sea <code>10</code>.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(numA </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> numB)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 55</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\xBFQue ha sucedido? \xBFNo deber\xEDa ser <code>10</code>? \xBFAcaso esto demuestra la superioridad de los humanos sobre las computadoras? No hay que irse tan lejos, vamos a hacer un <code>typeof</code> de las variables.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> numA)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// number</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> numB)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// string</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Como vemos, estamos intentamos sumar un dato de tipo <code>number</code> con uno de tipo <code>string</code>, y JavaScript lo interpreta como una concatenaci\xF3n, una suma se caracteres, as\xED que convierte al n\xFAmero <code>5</code> en un <code>string</code>. Pero que sucede si usamos una resta ahora.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(numA </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> numB)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// 0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Ahora javascript lo interpreta como una resta convierte el <code>&quot;5&quot;</code> en un n\xFAmero, es porque no existe tal cosa como la &quot;resta&quot; de caracteres, existe la eliminaci\xF3n, la extracci\xF3n o el remplazo de caracteres, pero eso es para otra ocasi\xF3n. Esto que sucedi\xF3 con la resta tambi\xE9n sucede con la multiplicaci\xF3n, divisi\xF3n y m\xF3dulo.</p><p>Miremos lo que sucede si restamos una letra.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(numA </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> numB)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;">// NaN</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>No se puede restar pl\xE1tano con manzana, y por eso da resultado <code>NaN</code>.</p><h2 id="verificacion-de-tipos" tabindex="-1">Verificaci\xF3n de tipos <a class="header-anchor" href="#verificacion-de-tipos" aria-hidden="true">#</a></h2><p>Vimos que JavaScript no le importa si sumamos una letra y un n\xFAmero, o si queremos sumar pero en vez de eso concatena los valores, eso es porque JavaScript es un lenguaje de <strong>tipado d\xE9bil</strong>, vamos a explicar esto.</p><p>Un lenguaje de <strong>tipado fuerte</strong> no permite violaciones en los tipos de datos, es decir que una variable que fue creada con un tipo en concreto, no puede ser usada para otros tipos de datos ni efectuar operaciones que no tengan relaci\xF3n con su tipo, para poder hacer esto ser\xEDa necesario realizar una conversi\xF3n de los datos. Si se intentase hacer una violaci\xF3n de datos estos dar\xEDas error durante el proceso de compilaci\xF3n, ni siquiera se podr\xEDa ejecutar.</p><p>Un lenguaje de <strong>tipado d\xE9bil</strong> como JavaScript, permite esta clase de violaciones, dando resultado a muchos problemas si no se tiene cuidado con los tipos antes de realizar alguna operaci\xF3n. JavaScript no verifica los datos antes de efectuar una operaci\xF3n, al ser un lenguaje interpretado tampoco hace una compilaci\xF3n, por lo que tampoco avisa cuando terminamos nuestro c\xF3digo.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">// Verificar la entrada de un dato.</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getNumber</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(num))</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">    </span><span style="color:#676E95;">// isNaN es un m\xE9todo que recibe un valor y devuelve verdadero si no es un n\xFAmero</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">El valor introducido no es un n\xFAmero</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Aqu\xED hacemos uso de una condicional ver el siguiente tema, <a href="./02-conditional.html">condicionales</a>.</p><p>Dato todos estos problemas de tipado y estructuras de datos hac\xEDa de JavaScript un lenguaje propenso a errores durante la ejecuci\xF3n de c\xF3digo en fase de producci\xF3n, entonces Microsoft decidi\xF3 crear <strong>TypeScript</strong> como una manera de solventar todas las carencias de JavaScript.</p><h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h2><p>TypeScript es un superconjunto de JavaScript, eso quiere decir que el c\xF3digo creado con JavaScript es compatible con TypeScript. Lo que hace en esencia es a\xF1adir tipos de datos a las variables y a los objetos. A diferencia de JavaScript, TypeScript necesita compilarse, o mejor dicho, transcribirse, dado que a\xF1ade tipos que los interpretes de los navegadores no pueden entender.</p><div class="language-ts line-numbers-mode"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numA</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> numB</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">numA </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> numB</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;">// Dar\xE1 error cuando se transcriba/compile al combinar datos distintos</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">numA </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;">// Dar\xE1 error al asignar un string a una variable declarada como number</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,67),p=[o];function r(c,t,i,y,D,u){return n(),a("div",null,p)}const A=s(l,[["render",r]]);export{C as __pageData,A as default};
